{
	"id": "23fbad46cd6e3c156b8f65818fe6277e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyContract.sol": {
				"content": "//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\ncontract MyContract{\r\n    //Arrays\r\n    // uint[] public uintArray = [1,2,3];\r\n    // string[] public arr= [\"apple\", \"banana\"];\r\n    // string[] public val;\r\n    // uint256[][] public arr2d = [[1 ,2 , 3],[4, 5 , 6]];\r\n\r\n    // function addValue(string memory _value) public {\r\n    //     val.push(_value);\r\n    // }\r\n\r\n    // function valueCount() public view returns (uint){\r\n    //     return val.length;\r\n    // }\r\n\r\n\r\n    // struct Book{\r\n    //     string title;\r\n    //     string author;\r\n    // } \r\n    // //mapping\r\n    // mapping(uint => string) public names;\r\n    // mapping(uint => Book) public books;\r\n    // mapping(address =>  mapping(uint => Book)) public mybooks;\r\n    \r\n    // constructor() {\r\n    //     names[1] = \"Ansh\";\r\n    //     names[2]= \"Bhow\";\r\n    //     names[3]=\"Meow\";\r\n    // }\r\n\r\n    // function addBook(\r\n    //     uint _id,\r\n    //     string memory _title,\r\n    //     string memory _author\r\n    //     ) public {\r\n    //     books[_id]=Book(_title,_author);\r\n    // }\r\n     \r\n    // function addMyBook(\r\n    //     uint _id,\r\n    //     string memory _title,\r\n    //     string memory _author\r\n    //     ) public {\r\n    //     mybooks[msg.sender][_id] = Book(_title,_author);\r\n    // }\r\n\r\n    //conditionals and loops\r\n   \r\n   \r\n    // uint[] public num= [1,2,3,4,5,6,7,8,9,10];\r\n\r\n    // address public owner;\r\n\r\n    // constructor(){\r\n    //     owner= msg.sender;\r\n    // }\r\n\r\n    // function countEvennumbers() public view returns(uint){\r\n    //     uint count=0;\r\n    //     for(uint i=0;i<num.length;i++){\r\n    //         if(isEvenNumber(num[i])){\r\n    //             count++;\r\n    //         }\r\n    //     }\r\n    //     return count;\r\n    // }\r\n\r\n    // function isEvenNumber(uint _number) public view returns (bool){\r\n    //     if(_number % 2 ==0){\r\n    //         return true;\r\n    //     }else{\r\n    //         return false;\r\n    //     }\r\n    // }\r\n\r\n    // function isOwner() public view returns ( bool){\r\n    //     return(msg.sender == owner);\r\n    // }\r\n\r\n    \r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MyContract.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyContract.sol\":65:2084  contract MyContract{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyContract.sol\":65:2084  contract MyContract{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dd461b229674d7aa2abb73c702261fc453786d206067fbaa789947103369495a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220dd461b229674d7aa2abb73c702261fc453786d206067fbaa789947103369495a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD CHAINID SHL 0x22 SWAP7 PUSH21 0xD7AA2ABB73C702261FC453786D206067FBAA789947 LT CALLER PUSH10 0x495A64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "65:2019:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220dd461b229674d7aa2abb73c702261fc453786d206067fbaa789947103369495a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD CHAINID SHL 0x22 SWAP7 PUSH21 0xD7AA2ABB73C702261FC453786D206067FBAA789947 LT CALLER PUSH10 0x495A64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "65:2019:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 2084,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd461b229674d7aa2abb73c702261fc453786d206067fbaa789947103369495a64736f6c634300081a0033",
									".code": [
										{
											"begin": 65,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 2084,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 2084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 2084,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract.sol\":{\"keccak256\":\"0x0c8223ed26d8bbedfdd142a0c0cd89fa99b23e13433a830c0264d180185a6b20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a0fc307cbe47de01a12322d86437e7eecc533f8a0e9516f5e4b0ad864fe5d5\",\"dweb:/ipfs/QmPMBTZ6PZC7GgZCuggu1E322TZupaPLGdtuSWzhTL5kMY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "MyContract",
							"nameLocation": "74:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "65:2019:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "34:2054:0"
				},
				"id": 0
			}
		}
	}
}